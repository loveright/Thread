<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 读取配置文件 -->
    <util:properties id="redis"
                     location="classpath:conf/redis.properties"/>

    <!-- redis config start -->
    <!-- 配置JedisPoolConfig实例 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="#{redis.maxIdle}" />
        <property name="maxTotal" value="#{redis.maxActive}" />
        <property name="maxWaitMillis" value="#{redis.maxWait}" />
        <property name="testOnBorrow" value="#{redis.testOnBorrow}" />
    </bean>
    <!--  配置JedisConnectionFactory -->
    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="#{redis.host}" />
        <property name="port" value="#{redis.port}" />
        <!--  <property name="password" value="#{redis.password}" /> -->
        <property name="database" value="#{redis.dbIndex}" />
        <property name="poolConfig" ref="poolConfig" />
    </bean>
    <!-- 配置RedisTemplate -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <!--     如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer">

            </bean>
        </property>
    </bean>
    <!--自定义redis工具类,在需要缓存的地方注入此类  -->
    <bean id="redisUtil" class="com.by.utils.RedisUtil">
        <property name="redisTemplate" ref="redisTemplate" />
    </bean>

    <!-- 配置处理消息的消息监听适配器 -->
    <bean class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter" id="messageListener">
        <!-- 构造方法注入：自定义的消息监听 -->
        <constructor-arg>
            <bean class="com.by.dynamicthreadpoolbyredis.listener.RedisMessageListener"/>
        </constructor-arg>
    </bean>

    <!-- 消息监听者容器：对所有的消息进行统一管理 -->
    <bean class="org.springframework.data.redis.listener.RedisMessageListenerContainer" id="redisContainer">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="messageListeners">
            <map>
                <!-- 配置频道与监听器
                    将此频道中的内容交由此监听器处理
                    key-ref：监听，处理消息
                    ChannelTopic：订阅的消息频道
                 -->
                <entry key-ref="messageListener">
                    <list>
                        <bean class="org.springframework.data.redis.listener.ChannelTopic">
                            <constructor-arg value="ITCAST"></constructor-arg>
                        </bean>
                    </list>
                </entry>
            </map>
        </property>
    </bean>


</beans>